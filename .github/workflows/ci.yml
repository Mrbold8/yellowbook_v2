name: CI

on:
  pull_request:
  push:
    branches: [main]

env:
  # Speeds up Nx by disabling interactive prompts
  NX_NON_INTERACTIVE: true

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for Nx affected to compute SHAs

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # If your repo uses Prisma types (@prisma/client) during typecheck,
      # pnpm may block postinstall builds; approve & generate client.
      - name: Approve build scripts (Prisma etc.)
        run: yes | pnpm approve-builds

      - name: Generate Prisma client (if schema exists)
        if: ${{ hashFiles('prisma/schema.prisma') != '' }}
        run: pnpm exec prisma generate

      # Compute base/head explicitly so Nx affected works on both PRs & pushes
      - name: Determine base/head
        id: sha
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "base=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "head=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "base=$(git rev-parse HEAD^)" >> $GITHUB_OUTPUT
            echo "head=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          fi

      - name: Lint (Nx affected)
        run: pnpm nx affected -t lint --base=${{ steps.sha.outputs.base }} --head=${{ steps.sha.outputs.head }} --parallel=3

      - name: Prettier check
        run: pnpm format:check

      - name: Typecheck (no emit)
        run: pnpm typecheck
